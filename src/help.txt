Utilities for handling separated value data

Usage:

    $ xsvutils [<FILENAME>] [<SUBCOMMAND>] [<OPTIONS>...]

    FILENAME と SUBCOMMAND は順番が逆でも可能。
    SUBCOMMAND と解釈されうる FILENAME は -i オプションでの指定が必要。

    SUBCOMMAND は内容により複数を組み合わせることも可能。
    SUBCOMMAND 省略時はcatになる。


Subcommands:

    なにもしないサブコマンド

        cat                             Print data to the terminal

    レコード選択に関するサブコマンド

        take [<N>]                      Print first N records
        head [<N>]                      Print first N records
        limit [<N>]                     Print first N records
        drop [<N>]                      Print all except first N records
        offset [<N>]                    Print all except first N records
        filter <CONDITION>

    列の選択に関するサブコマンド

        cut <COLUMNS>                   Print specified columns

    列を追加するサブコマンド

        addconst <NEW_NAME> <VALUE      固定値のカラムを一番左に追加する
        addcopy <NEW_NAME> <SOURCE>
        addlinenum <NEW_NAME> [<START_VALUE>]
        addlinenum2 <NEW_NAME>
        addnumsortable <NEW_NAME> <TARGET_COLUMN>

    その他のデータを加工するコマンド

        update <INDEX> <COLUMN> <VALUE> セルを指定して値を更新する
        sort [<COLUMNS>]                ソートする
        paste <OTHER_FILE>
        union <OTHER_FILE>

    集計するコマンド

        wcl                             レコード数を表示する
        header                          カラムの一覧を表示する
        summary                         データのサマリを表示する
        facetcount
        countcols                       カラム数を集計する

    オプションやパラメータを受け付けるサブコマンドもある。

    パラメータを受け付けるサブコマンドの多くは以下のように複数の書き方が可能。

        $ xsvutils data.tsv cut title
        $ xsvutils data.tsv cut --col title

    都度コマンドラインからコマンドを入力する際には1つ目の書き方が短くて便利だが、
    パラメータにどんな値が来るかわからない場合には別の解釈をされないようにオプションでの指定が必要。

        $ xsvutils data.tsv cut --col $COLUMN

    以下のように書いてしまうと、 $COLUMN が head という値の場合に、
    それが cut のパラメータではなく head というサブコマンドになってしまう。

        $ xsvutils data.tsv cut $COLUMN


Common options:

    --tsv            入力はTSVフォーマット (省略時はTSV/CSV自動判別)
    --csv            入力はCSVフォーマット (省略時はTSV/CSV自動判別)
    -i <FILENAME>    Input from <FILENAME> (default is stdin)
    -o <FILENAME>    Output to <FILENAME>  (default is stdout)

    --i-header <HEADERS> 入力にはヘッダーがなくヘッダーをオプションで指定。HEADERS はコンマ区切り
    --o-no-header    出力にはヘッダを付けない。端末に表形式で表示する場合には無意味

    xsvutils の直後にファイル名を与えるか、 -i オプションでファイル名を与えると、それが入力になる。
    それらがない場合は標準入力が入力になる。

    これらのオプションは FILENAME, SUBCOMMAND の前に置くことも可能。
    サブコマンドに固有のオプションは SUBCOMMAND の後ろであることが必要。


Subcommand `cat`:

    以下は同じ意味である。

        $ xsvutils FILENAME
        $ xsvutils FILENAME cat
        $ xsvutils -i FILENAME
        $ xsvutils -i FILENAME cat
        $ xsvutils < FILENAME
        $ xsvutils cat < FILENAME


Subcommand `take` and Subcommand `head` and Subcommand `limit`:

    Print first N records.

    3 subcommands `take`, `head` and `limit` are the same subcommand.

    Options:
        -n <N>    Print first N records (default is 10)

    以下は同じ意味である。

        $ xsvutils FILENAME head -n 5
        $ xsvutils FILENAME head -n5
        $ xsvutils FILENAME head 5

    他のサブコマンドと組み合わせることも可能で、以下は結果が同じになる。
    つまり先頭の20レコード(ヘッダ行を除く)のid,nameの2列を表示する。

        $ xsvutils FILENAME head 20 cut id,name
        $ xsvutils FILENAME cut id,name head 20


Subcommand `drop` and Subcommand `offset`:

    先頭のNレコードを除く残りを出力する。

    2 subcommands `drop` and `offset` are the same subcommand.

    Options:
        -n <N>    Print all except first N records (default is 10)

    以下は同じ意味である。

        $ xsvutils FILENAME drop -n 5
        $ xsvutils FILENAME drop -n5
        $ xsvutils FILENAME drop 5

    他のサブコマンドとの組み合わせは `take` サブコマンドと同様である。


Subcommand `cut`:

    Options:
        --col <COLUMNS>   Print <COLUMNS>

    以下は同じ意味である。

        $ xsvutils FILENAME cut --col name1,name2,name3
        $ xsvutils FILENAME cut --col name1..name3
        $ xsvutils FILENAME cut name1,name2,name3
        $ xsvutils FILENAME cut name1..name3

    Retrieve only 3 columns: foo, col1, col20

        $ xsvutils data.tsv cut --col foo,col1,col20

    retrieve 21 columns: foo, col1, col2, col3, ... col20

        $ xsvutils data.tsv cut --col foo,col1..col20


Subcommand `update`:

    セルを指定して値を更新する

    Options:
        --index <RECORD_INDEX>
        --col <COLUMN>
        --value <VALUE>


Subcommand `addconst`:

    固定値のカラムを一番左に追加する

    Options:
        --name <COLUMN>
        --value <VALUE>

    以下は同じ意味である。

        $ xsvutils FILENAME addconst --name col21 --value 0
        $ xsvutils FILENAME addconst --value 0 --name col21
        $ xsvutils FILENAME addconst col21 0

    他のサブコマンドと組み合わせることも可能。
    以下の例では、FILENAME の id カラムと固定値 0 のカラム col0 の2カラムを表示する。

        $ xsvutils FILENAME addconst col0 dummy cut id,col0


Subcommand `sort`:

    ソートする

    Options:
        --col <COLUMNS>


Subcommand `wcl`:

    レコード数を表示する。ヘッダ行は含まない。

    データが大きい場合には、進捗表示をする。


Subcommand `header`:

    カラムの一覧を表示する。


Subcommand `summary`:

    データのカラムごとのサマリを表示する。

    出力は右から、カラムの位置、カラム名、データが含まれている割合、値の例の列挙である。

    データが大きい場合には、進捗表示をする。 Ctrl-C で集計処理を中止し、集計したところまでを表示する。


Subcommand `countcols`:

    カラム数を集計する。ヘッダ行も含めて集計する。

    データのカラム数が不明な場合に、正しいカラム数を推測するための参考情報になる。

    以下の出力例は、1行目が59カラムあり、しかしほとんどの列が56カラムであり、
    もっともカラム数の少ないのは51カラムであることを示す。

        | cols | records | ratio  | header |
        | 51   | 439     | 0.36%  |        |
        | 54   | 239     | 0.20%  |        |
        | 55   | 169     | 0.14%  |        |
        | 56   | 118485  | 97.36% |        |
        | 57   | 1423    | 1.17%  |        |
        | 58   | 846     | 0.70%  |        |
        | 59   | 96      | 0.08%  | *      |

    データが大きい場合には、進捗表示をする。 Ctrl-C で集計処理を中止し、集計したところまでを表示する。


Common options for developer:

    --explain 実行するスクリプトを標準エラー出力に出力する


